=========================
ReStructuredText 입문
=========================

:저자: 리차드 존스(Richard Jones)
:리비전: $Revision$
:저작권: 이 문서는 퍼블릭 도메인에 속해있다.

.. Contents::

아래 본문에는 "(quickref__)"과 같은 링크가 포함되어있다. 이 링크는
`빠른 reStructuredText`_ 라는 사용자 참고 자료에 연결된 상대 링크다. 해당 링크가 작동하지 않는다면
`master quick reference`_ 문서를 참고하기 바란다.

__
.. _빠른 reStructuredText: quickref_ko.html
.. _master quick reference:
   http://docutils.sourceforge.net/docs/user/rst/quickref.html

.. Note:: 이 문서는 reStructuredText에 대한 비공식적인 입문서로 아래에 있는
   `더 알아보기`_ 페이지에 공식적인 참고자료를 포함한 더 많은 자료가 링크되어 있다.


구조(Structure)
---------------

우선, reStructuredText를 "구조화된 문서"로 받아들이는 것은 다소 부적절하다.
이는 오히려 일관된 패턴을 사용하는 "규칙이 완화된 문서"에 가깝다.
이러한 일관된 패턴들을 HTML 변환기가 웹 브라우저에서 읽을 수 있는 "매우 구조화된 문서"로 바꿔준다.

가장 기본적인 패턴은 **문단** (quickref__) 이다.
문단은 한 줄 이상의 공백으로 이루어진 행으로 분리된 한 덩어리의 글이다.
문단들은 모두 똑같이 들여쓰여져야 한다 -- 즉, 왼쪽 가장자리가 정렬되어야 한다.
들여쓰기로 시작된 문단은 들여쓰여진 상태의 인용 문단이 될 것이다. 예를 들면::

  이것은 짧은 한 문단이다.

    이 부분은 글을 들여썼을 때의 결과를 나타내며, 주로 다른 문서를 인용할 때 사용된다.

  이것은 또 다른 문단이다.

결과:

  이것은 짧은 한 문단이다.

    이 부분은 글을 들여썼을 때의 결과를 나타내며, 주로 다른 문서를 인용할 때 사용된다.

  이것은 또 다른 문단이다.

__ quickref_ko.html#paragraphs


문자 형식(Text styles)
--------------------------

(quickref__)

__ quickref_ko.html#inline-markup

문단이나 본문 내에서 글을 추가적으로 **두껍게** 하거나 *이탈릭체*\ 로 표시하기 위해
"``**bold**``"와 "``*italics*``"를 사용할 수 있다.
이러한 방식을 "인라인 마크업"이라고 한다.

만약 당신이 무언가를 고정화된 공간에 문자 그대로 표현하고 싶다면 "````백 쿼트를 두 번````" 사용하라.
백 쿼트가 두 번 사용 된 내부에서는 더 이상의 조작이 이루어 지지 않는다.
즉, 백 쿼트를 사용하면 "``*``" 같은 것들이 문자 그대로 표시된다.

reStructuredText는 상당히 똑똑한 언어이므로 문서에서 특수 문자를 사용하고 싶다면 사용해도 대부분의 경우
문제가 없을 것이다.
예를 들어, 하나의 별표를 다루는 것은 방정식 5*6=30에서 사용되는 것처럼 문제가 생기지 않는다.
만약 \*별표로 둘러쌓인 글*이 이탤릭체로 표기되지 않게 하려면 해당 별표가 특수한 문자가 아님을
표시해줘야한다. "``\*``" (quickref__) 이렇게 별표 바로 전에 백슬래쉬를 쓰거나
두 개의 백 쿼트를 사용하여(인라인 리터럴) 양쪽을 닫으면 된다. ::

    ``*``

__ quickref_ko.html#escaping

.. Tip:: 인라인 마크업은 (괄호) 형식으로 생각하고 사용하라: 마크업 될 글의 앞과 뒤에 바로 써라.
         공백 문자로 둘러 쌓이거나 단어의 중간에 있는 인라인 마크업은 인식되지 않는다.
         더 자세한 정보는 `markup spec`__ 에서 확인할 수 있다.

__ ../../ref/rst/restructuredtext_ko.html#inline-markup


리스트(Lists)
-------------

항목을 나열하는 방식은 크게 3가지로 볼 수 있다. : **enumerated**,
**bulleted**, **definitions**.
어떤 종류의 패턴이든 왼쪽 부분이 리스트에 속한 글의 첫 줄에 맞춰져 있다면
리스트의 종류와 상관없이 원하는 만큼 많은 달락과 하위 리스트를 가질 수 있다.


리스트는 반드시 새로운 문단으로 시작해야 한다.
즉, 리스트는 공백으로 이루어진 행의 다음에 와야 한다.

**enumerated** 리스트 (숫자, 문자 또는 로마 숫자; quickref__)
  __ quickref_ko.html#enumerated-lists

  숫자나 문자 다음  "."을 쓰거나, 숫자나 문자를 "( )" 괄호 안에 적고 라인을 시작한다.
  --어떤 것을 써도 상관 없다.
  아래의 모든 형식이 인식된다::

    1. 숫자

    A. 대문자와
       두 문단 이상으로 이루어진

       여러 줄을 쓸 수도 있다!

    a. 소문자

       3. 다른 숫자로 시작하는 하위 리스트
       4. 숫자가 올바른 순서로 되어 있는지 확인하라!

    I. 로마 대문자 숫자

    i. 로마 소문자 숫자

    (1) 다시 숫자 사용

    1) 다시 숫자 사용

  결과 (주석: 모든 enumerated 리스트 형식들이 모든 웹 브라우저에서 항상 지원되지는 않는다.
  그래서 여기서 전체 결과를 보지 못할 수도 있다):

  1. 숫자

    A. 대문자와
       두 문단 이상으로 이루어진

       여러 줄을 쓸 수도 있다!

    a. 소문자

       3. 다른 숫자로 시작하는 하위 리스트
       4. 숫자가 올바른 순서로 되어 있는지 확인하라!

    I. 로마 대문자 숫자

    i. 로마 소문자 숫자

    (1) 다시 숫자 사용

    1) 다시 숫자 사용

**bulleted** 리스트 (quickref__)
  __ quickref_ko.html#bullet-lists

  enumerated 리스트 처럼, "-", "+" 또는 "*"같은 글머리 기호로 시작한다::

    * "*"를 사용하는 주요 항목

      - "-"를 사용하는 하위 리스트

        + 또 다른 하위 리스트

      - 다른 아이템

  결과:

  * "*"를 사용하는 주요 항목

    - "-"를 사용하는 하위 리스트

      + 또 다른 하위 리스트

    - 다른 아이템

**definition** 리스트 (quickref__)
  __ quickref_ko.html#definition-lists

  앞의 두 리스트와 다르게, definition 리스트는 용어와 용어의 설명 부분으로 구성되어 있다.
  definition 리스트의 형식은 아래와 같다::

    용어
      Definition 리스트 용어와 정의를 결합시킨다.

    *방식*
      용어는 한 줄의 구문이고, 정의는 용어와 관련이 있는 한 줄 또는 그 이상의 들여쓰여진 문단이나 본문 요소이다.
      용어와 정의 사이에 공백 행은 허용되지 않는다.

  결과:

  용어
      Definition lists 용어와 정의를 결합시킨다.

    *방식*
      용어는 한 줄의 구문이고, 정의는 용어와 관련이 있는 한 줄 또는 그 이상의 들여쓰여진 문단이나 본문 요소이다.
      용어와 정의 사이에 공백 행은 허용되지 않는다.


사전 형식화(Preformatting)
----------------------------
(quickref__)

__ quickref_ko.html#literal-blocks

사전에 형식화된 글 뭉치를 표현하기 위해서 다른 것을 수정할 필요없이 그 전 문단을 "``::``"로 끝내라.
사전에 형식화된 부분은 문서가 전 문단의 들여쓰기 수준으로 돌아갈 때 끝나게 된다::

  예시::

      공백, 개행, 공백 행, 그리고 모든 종류의 마크업은 리터럴 블럭 안에서 보존된다.
    여기를 보면 들여쓰기 수준을 줄였다.(하지만 충분하지 않다.)

  예시 없음

결과:

  예시::

      공백, 개행, 공백 행, 그리고 모든 종류의 마크업은 리터럴 블럭 안에서 보존된다.
    여기를 보면 들여쓰기 수준을 줄였다.(하지만 충분하지 않다.)

  예시 없음


만약 문단이 "``::``"로만 구성되어 있으면 이 문단은 결과물에서 표시되지 않는다::

  ::

      이것은 사전에 형식화된 문서의 일부분이다.
      그리고 마지막 "::" 문단은 제거된다.

결과:

::

    이것은 사전에 형식화된 문서의 일부분이다.
    그리고 마지막 "::" 문단은 제거된다.


구획(Sections)
---------------

(quickref__)

__ quickref_ko.html#section-structure

긴 문서 여러 구획으로 나누기 위해서는 **구획 머리글(Section Header)**\ 를 써야 한다.
한 줄의 글에 하단 줄, 또는 하단 줄과 상단 줄을 추가해서 구획 머리글을 만들 수 있으며,
하단줄, 또는 하단줄과 상단줄은 대쉬 "``-----``", 등호 "``======``", 틸드 "``~~~~~~``",
또는 글자와 숫자가 아닌 다른 문자 ``= - ` : ' " ~ ^ _ * + # < >`` 중 어떤 편한 것을 이용해도 상관 없다.

하단 줄로만 장식된 것은 같은 문자를 사용해 하단 줄과 상단 줄로 장식된 것과 구별된다.
또한, 하단 줄/상단 줄은 최소한 제목보다는 길어야하고,
같은 스타일로 장식된 모든 구획들은 같은 수준으로 취급되기 때문에 일관성이 있어야 한다::


  Chapter 1 Title
  ================

  Section 1.1 Title
  -----------------

  Subsection 1.1.1 Title
  ~~~~~~~~~~~~~~~~~~~~~~

  Section 1.2 Title
  -----------------

  Chapter 2 Title
  ===============

단순 pseudo-XML로 일러스트 됐을 때 아래의 결과를 얻게 된다::

    <section>
        <title>
            Chapter 1 Title
        <section>
            <title>
                Section 1.1 Title
            <section>
                <title>
                    Subsection 1.1.1 Title
        <section>
            <title>
                Section 1.2 Title
    <section>
        <title>
            Chapter 2 Title

(Pseudo-XML는 내포화를 위해서 들여쓰기를 사용하며 end-tag가 없다.
블럭 인용문 내에서 구획이 존재할 수 없기 때문에 위의 내용이 실제로 처리된 결과를
보여주는 것은 불가능하다.
구체적인 예시를 보려면 이 문서의 소스 텍스트와 처리된 결과의 섹션 구조를 비교해
보아라.)

구획 제목은 이름을 이용하여 링크의 대상으로 사용할 수 있다.
리스트(Lists)_ 제목에 링크하기 위해서 "``리스트(Lists)_``"\ 라고 쓰면 된다.
만약 제목 안에 공간이 있다면 `문자 형식(Text styles)`_ 이름을 "```문자 형식(Text styles)`_``"로 표시해야 한다.


문서 제목 / 부제(Document Title / Subtitle)
`````````````````````````````````````````````

전체 문서의 제목은 섹션 제목과 구별되며, 섹션과는 다른 형식을 이용하여 만들어진다.
(예를들면 기본 HTML writer는 문서 제목을 가운데 정렬시켜 보여준다.)

reStructuredText에서 문서 제목을 만들기 위해서는 문서의 시작 부분에서
고유한 형식을 사용해야 한다. 부제를 만들기 위해서는 문서 제목 바로 다음에
문서 제목과는 다른 고유한 형식을 사용해야 한다::

    ================
     Document Title
    ================
    ----------
     Subtitle
    ----------

    Section Title
    =============

    ...

"문서 제목"과 "구획 제목"은 동일한 기호를 사용하지만 서로 관련이 없는 동시에 구별이 되는 형식이다.
상단 줄과 하단 줄로 구성된 제목은 미학적인 부분을 고려해 가운데 정렬시킬 수도 있다.
(단, 하단 줄로만 구성된 경우는 불가능하다.)


그림(Images)
--------------

(quickref__)

__ quickref_ko.html#directives

문서에 그림을 삽입하고 싶으면, ``image`` 명령어__ 를 사용하라::

  .. image:: images/biohazard.png

결과:

.. image:: images/biohazard.png

``images/biohazard.png`` 부분은 문서에 삽입하고자하는 그림 파일의 이름을 가리킨다.
그림의 사이즈나 포맷 등에 재한은 없다.
만약 그림에 추가적인 정보를 입력하고 싶으면 이렇게 입력하면 된다::

  .. image:: images/biohazard.png
     :height: 100
     :width: 200
     :scale: 50
     :alt: alternate text

`image directive documentation`__ 에서 더 많은 정보를 확인하라.

__ ../../ref/rst/directives_ko.html
__ ../../ref/rst/directives_ko.html#images


더 알아보기
--------------

이 문서는 reStructuredText의 가장 기본적인 기능을 소개하고 있을뿐,
아직 살펴봐야 할 내용이 더 많이 남아있다. 다음 단계로는 `빠른 reStructuredText`_  사용자 참고 자료가
있다. 아주 상세한 정보를 원한다면, `reStructuredText 마크업 설명서`_\ 을 살펴보아라. [#]_

Docutils 또는 reStructuredText에 질문이 있거나 도움이 필요한 사용자는
Docutils-users_ 메일링 리스트로 메세지를 보내주기 바란다.

.. [#] 만약 상대 링크가 작동하지 않으면, 마스터문서를 확인해보기 바란다:
   http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html.

.. _reStructuredText 마크업 설명서:
   ../../ref/rst/restructuredtext_ko.html
.. _Docutils-users: ../mailing-lists.html#docutils-users
.. _Docutils project web site: http://docutils.sourceforge.net/
